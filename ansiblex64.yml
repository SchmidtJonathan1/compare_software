###### WIP (install software)  ######

## Install windows software with ansible x64
# Example for var data
# ./roles/test/vars/vars.yml
---
apps:
  - softwareName: KeePass
    softwareVersion: "2.49"
    softwareParam: /VERYSILENT
    installPath: C:\tmp\KeePass-2.49-Setup.exe
  - softwareName: MobaXterm
    softwareVersion: "21.4.0.4736"
    softwareParam: /qn
    installPath: C:\tmp\MobaXterm_installer_21.3.msi
  - softwareName: draw.io
    softwareVersion: "15.4.0"
    softwareParam: /S
    installPath: C:\tmp\draw.io-15.4.0-windows-installer.exe

#./roles/test/tasks/copy.yml
---
- name: copy file
  win_copy:
    src: software
    dest: C:\tmp\
...

# ./roles/test/tasks/basex64.yml
---
## Include vars from role path
- name: includ vars
  include_vars: vars.yml

## Get all PSChildName names from registry
- name: reg displayname x64
  win_shell: (Get-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*).PSChildName
  register: checkChildNamex64

## Loop registry with pschildnames
- name: reg displayversion x64
  win_reg_stat:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{ item }}
  loop: "{{ checkChildNamex64.stdout_lines }}"
  register: checkVerx64

## Set facts for name and version
- name: msg x64 DisplayName and Version
  set_fact:
    regListx64: "{{ regListx64| default ([]) + [item.properties.DisplayName.value + ' ' + item.properties.DisplayVersion.value] }}"
  when: item.properties.DisplayName.value is defined
  loop: "{{ checkVerx64.results }} "

## Install software
- name: Install software x64
  win_package:
    path: "{{ item.installPath }}"
    product_id: " "
    arguments: "{{ item.softwareParam }}"
    state: present
  when:
    - regListx64 is regex(item.softwareName)
    - regListx64 is not regex(item.softwareVersion)
  loop: "{{ apps }}"
...
